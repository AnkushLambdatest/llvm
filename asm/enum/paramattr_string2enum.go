// Code generated by "string2enum -linecomment -type ParamAttr ../../ir/enum"; DO NOT EDIT.

package enum

import (
	"fmt"

	"github.com/llir/llvm/ir/enum"
)

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the string2enum command to generate them again.
	var x [1]struct{}
	_ = x[enum.ParamAttrImmArg-0]
	_ = x[enum.ParamAttrInAlloca-1]
	_ = x[enum.ParamAttrInReg-2]
	_ = x[enum.ParamAttrNest-3]
	_ = x[enum.ParamAttrNoAlias-4]
	_ = x[enum.ParamAttrNoCapture-5]
	_ = x[enum.ParamAttrNoFree-6]
	_ = x[enum.ParamAttrNonNull-7]
	_ = x[enum.ParamAttrNoMerge-8]
	_ = x[enum.ParamAttrNullPointerIsValid-9]
	_ = x[enum.ParamAttrReadNone-10]
	_ = x[enum.ParamAttrReadOnly-11]
	_ = x[enum.ParamAttrReturned-12]
	_ = x[enum.ParamAttrSignExt-13]
	_ = x[enum.ParamAttrSRet-14]
	_ = x[enum.ParamAttrSwiftError-15]
	_ = x[enum.ParamAttrSwiftSelf-16]
	_ = x[enum.ParamAttrWriteOnly-17]
	_ = x[enum.ParamAttrZeroExt-18]
}

const _ParamAttr_name = "immarginallocainregnestnoaliasnocapturenofreenonnullnomergenull_pointer_is_validreadnonereadonlyreturnedsignextsretswifterrorswiftselfwriteonlyzeroext"

var _ParamAttr_index = [...]uint8{0, 6, 14, 19, 23, 30, 39, 45, 52, 59, 80, 88, 96, 104, 111, 115, 125, 134, 143, 150}

// ParamAttrFromString returns the ParamAttr enum corresponding to s.
func ParamAttrFromString(s string) enum.ParamAttr {
	if len(s) == 0 {
		return 0
	}
	for i := range _ParamAttr_index[:len(_ParamAttr_index)-1] {
		if s == _ParamAttr_name[_ParamAttr_index[i]:_ParamAttr_index[i+1]] {
			return enum.ParamAttr(i)
		}
	}
	panic(fmt.Errorf("unable to locate ParamAttr enum corresponding to %q", s))
}
