// Code generated by "string2enum -linecomment -type FuncAttr ../../ir/enum"; DO NOT EDIT.

package enum

import (
	"fmt"

	"github.com/llir/llvm/ir/enum"
)

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the string2enum command to generate them again.
	var x [1]struct{}
	_ = x[enum.FuncAttrAlwaysInline-0]
	_ = x[enum.FuncAttrArgMemOnly-1]
	_ = x[enum.FuncAttrBuiltin-2]
	_ = x[enum.FuncAttrCold-3]
	_ = x[enum.FuncAttrConvergent-4]
	_ = x[enum.FuncAttrInaccessibleMemOnly-5]
	_ = x[enum.FuncAttrInaccessibleMemOrArgMemOnly-6]
	_ = x[enum.FuncAttrInlineHint-7]
	_ = x[enum.FuncAttrJumpTable-8]
	_ = x[enum.FuncAttrMinSize-9]
	_ = x[enum.FuncAttrNaked-10]
	_ = x[enum.FuncAttrNoBuiltin-11]
	_ = x[enum.FuncAttrNoCFCheck-12]
	_ = x[enum.FuncAttrNoDuplicate-13]
	_ = x[enum.FuncAttrNoFree-14]
	_ = x[enum.FuncAttrNoImplicitFloat-15]
	_ = x[enum.FuncAttrNoInline-16]
	_ = x[enum.FuncAttrNoMerge-17]
	_ = x[enum.FuncAttrNonLazyBind-18]
	_ = x[enum.FuncAttrNoRecurse-19]
	_ = x[enum.FuncAttrNoRedZone-20]
	_ = x[enum.FuncAttrNoReturn-21]
	_ = x[enum.FuncAttrNoSync-22]
	_ = x[enum.FuncAttrNoUndef-23]
	_ = x[enum.FuncAttrNoUnwind-24]
	_ = x[enum.FuncAttrNullPointerIsValid-25]
	_ = x[enum.FuncAttrOptForFuzzing-26]
	_ = x[enum.FuncAttrOptNone-27]
	_ = x[enum.FuncAttrOptSize-28]
	_ = x[enum.FuncAttrReadNone-29]
	_ = x[enum.FuncAttrReadOnly-30]
	_ = x[enum.FuncAttrReturnsTwice-31]
	_ = x[enum.FuncAttrSafeStack-32]
	_ = x[enum.FuncAttrSanitizeAddress-33]
	_ = x[enum.FuncAttrSanitizeHWAddress-34]
	_ = x[enum.FuncAttrSanitizeMemory-35]
	_ = x[enum.FuncAttrSanitizeMemTag-36]
	_ = x[enum.FuncAttrSanitizeThread-37]
	_ = x[enum.FuncAttrShadowCallStack-38]
	_ = x[enum.FuncAttrSpeculatable-39]
	_ = x[enum.FuncAttrSpeculativeLoadHardening-40]
	_ = x[enum.FuncAttrSSP-41]
	_ = x[enum.FuncAttrSSPReq-42]
	_ = x[enum.FuncAttrSSPStrong-43]
	_ = x[enum.FuncAttrStrictFP-44]
	_ = x[enum.FuncAttrUwtable-45]
	_ = x[enum.FuncAttrWillReturn-46]
	_ = x[enum.FuncAttrWriteOnly-47]
}

const _FuncAttr_name = "alwaysinlineargmemonlybuiltincoldconvergentinaccessiblememonlyinaccessiblemem_or_argmemonlyinlinehintjumptableminsizenakednobuiltinnocf_checknoduplicatenofreenoimplicitfloatnoinlinenomergenonlazybindnorecursenoredzonenoreturnnosyncnoundefnounwindnull_pointer_is_validoptforfuzzingoptnoneoptsizereadnonereadonlyreturns_twicesafestacksanitize_addresssanitize_hwaddresssanitize_memorysanitize_memtagsanitize_threadshadowcallstackspeculatablespeculative_load_hardeningsspsspreqsspstrongstrictfpuwtablewillreturnwriteonly"

var _FuncAttr_index = [...]uint16{0, 12, 22, 29, 33, 43, 62, 91, 101, 110, 117, 122, 131, 141, 152, 158, 173, 181, 188, 199, 208, 217, 225, 231, 238, 246, 267, 280, 287, 294, 302, 310, 323, 332, 348, 366, 381, 396, 411, 426, 438, 464, 467, 473, 482, 490, 497, 507, 516}

// FuncAttrFromString returns the FuncAttr enum corresponding to s.
func FuncAttrFromString(s string) enum.FuncAttr {
	if len(s) == 0 {
		return 0
	}
	for i := range _FuncAttr_index[:len(_FuncAttr_index)-1] {
		if s == _FuncAttr_name[_FuncAttr_index[i]:_FuncAttr_index[i+1]] {
			return enum.FuncAttr(i)
		}
	}
	panic(fmt.Errorf("unable to locate FuncAttr enum corresponding to %q", s))
}
